{"version":3,"sources":["Redux/actions.ts","Components/Inputs.tsx","Redux/selectors.ts","Components/Button.tsx","Components/InputsContainer.tsx","Components/Display.tsx","Components/DisplayContainer.tsx","App.tsx","Redux/reducer.ts","Redux/redux_store.ts","index.tsx"],"names":["ACTIONS_TYPE","InputComponent","value","label","changeValue","type","onChange","selectAll","state","reducer","ChangeStartValue","startValue","START_VALUE","payload","ChangeMaxValue","maxValue","MAX_VALUE","SetValue","SET_DISPLAY","setError","SET_ERROR","ButtonFC","title","func","disabled","onClick","InputsContainer","useSelector","disabledButtonSet","error","dispatch","useDispatch","style","display","justifyContent","e","currentTarget","Number","localStorage","setItem","toString","Display","startValueDisplay","disabledButtonReset","disabledButtonInc","inc","reset","DisplayContainer","maxValueDisplay","INC_DISPLAY","RESET","App","useEffect","getItem","className","InitialState","Reducer","action","reducers","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ff2209b.chunk.js","sourcesContent":["export enum ACTIONS_TYPE {\r\n\tSTART_VALUE = \"START_VALUE\",\r\n\tMAX_VALUE = \"MAX_VALUE\",\r\n\tSET_DISPLAY = \"SET_DISPLAY\",\r\n\tINC_DISPLAY = \"INC_DISPLAY\",\r\n\tRESET = \"RESET\",\r\n\tSET_ERROR = \"SET_ERROR\"\r\n}\r\n\r\nexport type ChangeStartValueType = {\r\n\ttype: ACTIONS_TYPE.START_VALUE,\r\n\tpayload: {\r\n\t\tstartValue: number\r\n\t}\r\n}\r\nexport type ChangeMaxValueType = {\r\n\ttype: ACTIONS_TYPE.MAX_VALUE,\r\n\tpayload: {\r\n\t\tmaxValue: number\r\n\t}\r\n}\r\nexport type SetValueType = {\r\n\ttype: ACTIONS_TYPE.SET_DISPLAY\r\n\tpayload: {\r\n\t\tstartValue: number\r\n\t}\r\n}\r\nexport type incValueType = {\r\n\ttype: ACTIONS_TYPE.INC_DISPLAY\r\n}\r\nexport type resetValueType = {\r\n\ttype: ACTIONS_TYPE.RESET\r\n}\r\nexport type setErrorType = ReturnType<typeof setError>\r\n\r\n\r\nexport const ChangeStartValue = ( startValue: number ): ChangeStartValueType => {\r\n\treturn { type:ACTIONS_TYPE.START_VALUE, payload: { startValue } }\r\n}\r\nexport const ChangeMaxValue = ( maxValue: number ): ChangeMaxValueType => {\r\n\treturn { type:ACTIONS_TYPE.MAX_VALUE, payload: { maxValue } }\r\n}\r\n\r\nexport const SetValue = (startValue: number): SetValueType => {\r\n\treturn { type:ACTIONS_TYPE.SET_DISPLAY, payload: {startValue} }\r\n}\r\nexport const incValue = (): incValueType => {\r\n\treturn { type:ACTIONS_TYPE.INC_DISPLAY }\r\n}\r\nexport const resetValue = (): resetValueType => {\r\n\treturn { type:ACTIONS_TYPE.RESET }\r\n}\r\n\r\nexport const setError = (payload: string) => ({\r\n\ttype:ACTIONS_TYPE.SET_ERROR, payload\r\n}as const)\r\n\r\nexport type ActionsReducerTypes = ChangeStartValueType | ChangeMaxValueType | SetValueType | incValueType | resetValueType | setErrorType","import React from \"react\";\r\n\r\ntype PropsType = {\r\n\tlabel: string\r\n\tvalue: number\r\n\tchangeValue: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n}\r\nexport const InputComponent: React.FunctionComponent<PropsType> = (\r\n\t{\r\n\t\tvalue,\r\n\t\tlabel,\r\n\t\tchangeValue,\r\n\t}) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<label>\r\n\t\t\t\t{label}:\r\n\t\t\t\t<input type=\"number\" value={value} onChange={changeValue}/>\r\n\t\t\t</label>\r\n\r\n\r\n\t\t</div>\r\n\t)\r\n}","import { RootStoreType} from './redux_store';\r\n\r\nexport const selectAll = (state: RootStoreType) => state.reducer;","import React from \"react\";\r\n\r\ntype PropsType = {\r\n\ttitle: string\r\n\tdisabled: boolean\r\n\tfunc: () => void\r\n}\r\n\r\nexport const ButtonFC: React.FunctionComponent<PropsType> =  ({title, func, disabled}) => {\r\n\r\n\treturn (\r\n\t\t<button\r\n\t\t\t onClick={func}\r\n\t\t\t disabled={disabled}\r\n\t\t>{title}</button>\r\n\t)\r\n}\r\n","import React from \"react\";\r\nimport {InputComponent} from \"./Inputs\";\r\nimport {selectAll} from \"../Redux/selectors\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {ChangeMaxValue, ChangeStartValue, setError, SetValue} from \"../Redux/actions\";\r\nimport {ButtonFC} from \"./Button\";\r\n\r\nexport const InputsContainer = () => {\r\n\tconst {startValue, maxValue, disabledButtonSet, error} = useSelector(selectAll);\r\n\tlet dispatch = useDispatch();\r\n\tconst changeStartValue = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tlet value = e.currentTarget.value\r\n\t\tdispatch(ChangeStartValue((Number(value))))\r\n\t}\r\n\tconst changeMaxValue = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tlet value = e.currentTarget.value\r\n\t\tdispatch(ChangeMaxValue((Number(value))))\r\n\t}\r\n\tconst setValueHandler = () => {\r\n\t\tif (startValue < 0) {\r\n\t\t\tdispatch(setError(\"<0\"))\r\n\t\t}\r\n\t\tif (startValue === maxValue) {\r\n\t\t\tdispatch(setError(\"===\"))\r\n\t\t}\r\n\t\tif (startValue > maxValue) {\r\n\t\t\tdispatch(setError(\"MaxValue\"))\r\n\t\t}\r\n\t\tif (startValue < maxValue && startValue >= 0) {\r\n\t\t\tdispatch(SetValue(startValue))\r\n\t\t}\r\n\t\tdispatch(SetValue(startValue))\r\n\t\tlocalStorage.setItem(\"startValue\", startValue.toString())\r\n\t\tlocalStorage.setItem(\"maxValue\", maxValue.toString())\r\n\t}\r\n\treturn (\r\n\t\t<div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n\t\t\t<InputComponent\r\n\t\t\t\tlabel={\"StartValue\"}\r\n\t\t\t\tvalue={startValue}\r\n\t\t\t\tchangeValue={changeStartValue}\r\n\t\t\t/>\r\n\t\t\t<InputComponent\r\n\t\t\t\tlabel={\"MaxValue\"}\r\n\t\t\t\tvalue={maxValue}\r\n\t\t\t\tchangeValue={changeMaxValue}\r\n\t\t\t/>\r\n\t\t\t{error}\r\n\t\t\t<ButtonFC title={'SET'}\r\n\t\t\t\t\t\t\t\tfunc={setValueHandler}\r\n\t\t\t\t\t\t\t\tdisabled={disabledButtonSet}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from \"react\";\r\nimport {ButtonFC} from \"./Button\";\r\n\r\ntype PropsType = {\r\n\tstartValueDisplay: number\r\n\tmaxValueDisplay:number\r\n\tstartValue: number\r\n\tdisabledButtonReset: boolean\r\n\tdisabledButtonInc: boolean\r\n\tinc: () => void\r\n\treset: () => void\r\n}\r\n\r\nexport const Display: React.FunctionComponent<PropsType> = (\r\n\t{\r\n\t\tstartValueDisplay,\r\n\t\tdisabledButtonReset,\r\n\t\tdisabledButtonInc,\r\n\t\tinc,\r\n\t\treset\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t } ) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{startValueDisplay}\r\n\t\t\t<ButtonFC title={'INC'} func={inc} disabled={disabledButtonInc} />\r\n\t\t\t<ButtonFC title={'RESET'}\tfunc={reset} disabled={disabledButtonReset}/>\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {selectAll} from \"../Redux/selectors\";\r\nimport {Display} from \"./Display\";\r\nimport {incValue, resetValue} from \"../Redux/actions\";\r\n\r\nexport const DisplayContainer = () => {\r\n\tconst {\r\n\t\tstartValueDisplay,\r\n\t\tmaxValueDisplay,\r\n\t\tstartValue,\r\n\t\tdisabledButtonReset,\r\n\t\tdisabledButtonInc\r\n\t} = useSelector(selectAll);\r\n\tlet dispatch = useDispatch();\r\n\tconst inc = () => {\r\n\t\tdispatch(incValue())\r\n\t}\r\n\tconst reset = () => {\r\n\t\tdispatch(resetValue())\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Display startValueDisplay={startValueDisplay}\r\n\t\t\t\t\t\t\t startValue={startValue}\r\n\t\t\t\t\t\t\t inc={inc}\r\n\t\t\t\t\t\t\t reset={reset}\r\n\t\t\t\t\t\t\t maxValueDisplay={maxValueDisplay}\r\n\t\t\t\t\t\t\t disabledButtonInc={disabledButtonInc}\r\n\t\t\t\t\t\t\t disabledButtonReset={disabledButtonReset}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}","import React, {useEffect} from 'react';\nimport './App.css';\nimport {InputsContainer} from './Components/InputsContainer';\nimport {DisplayContainer} from \"./Components/DisplayContainer\";\nimport {useDispatch} from \"react-redux\";\nimport {ChangeMaxValue, ChangeStartValue, SetValue} from \"./Redux/actions\";\n\nfunction App() {\n\tconst dispatch = useDispatch()\n\tuseEffect(() => {\n\t\tdispatch(ChangeStartValue(Number(localStorage.getItem(\"startValue\"))))\n\t\tdispatch(ChangeMaxValue(Number(localStorage.getItem(\"maxValue\"))))\n\t\tdispatch(SetValue(Number(localStorage.getItem(\"startValue\"))))\n\t}, [dispatch])\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<InputsContainer/>\n\t\t\t<DisplayContainer/>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import {ACTIONS_TYPE, ActionsReducerTypes} from \"./actions\";\r\n\r\ntype initialStateType = {\r\n\tstartValue: number\r\n\tmaxValue: number\r\n\tstartValueDisplay: number\r\n\tmaxValueDisplay: number\r\n\tdisabledButtonSet: boolean\r\n\tdisabledButtonInc: boolean\r\n\tdisabledButtonReset: boolean\r\n\terror: string\r\n}\r\nlet InitialState: initialStateType = {\r\n\tstartValue: 0,\r\n\tmaxValue: 5,\r\n\tstartValueDisplay: 0,\r\n\tmaxValueDisplay: 0,\r\n\tdisabledButtonSet: false,\r\n\tdisabledButtonInc: false,\r\n\tdisabledButtonReset: false,\r\n\terror: \"\"\r\n}\r\n\r\nconst Reducer = (state: initialStateType = InitialState, action: ActionsReducerTypes): initialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase ACTIONS_TYPE.START_VALUE : {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action.payload,\r\n\t\t\t\tdisabledButtonSet: false,\r\n\t\t\t\tdisabledButtonInc: true,\r\n\t\t\t\tdisabledButtonReset: true,\r\n\t\t\t\terror: ''\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase ACTIONS_TYPE.MAX_VALUE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action.payload,\r\n\t\t\t\tdisabledButtonSet: false,\r\n\t\t\t\tdisabledButtonInc: true,\r\n\t\t\t\tdisabledButtonReset: true,\r\n\t\t\t\terror: ''\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase ACTIONS_TYPE.SET_DISPLAY: {\r\n\t\t\tif (state.error !== \"\") {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tdisabledButtonSet: true,\r\n\t\t\t\t\tdisabledButtonReset: true,\r\n\t\t\t\t\tdisabledButtonInc: true,\r\n\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tstartValueDisplay: state.startValue,\r\n\t\t\t\t\tdisabledButtonSet: true,\r\n\t\t\t\t\tdisabledButtonReset: true,\r\n\t\t\t\t\tdisabledButtonInc: false,\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase ACTIONS_TYPE.INC_DISPLAY: {\r\n\t\t\tif (state.startValueDisplay === state.maxValue) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tdisabledButtonInc: true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstartValueDisplay: state.startValueDisplay + 1,\r\n\t\t\t\tmaxValueDisplay: state.maxValue,\r\n\t\t\t\tdisabledButtonReset: false\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase ACTIONS_TYPE.RESET: {\r\n\t\t\tif (state.error !== \"\" && state.startValue !== state.maxValue) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tdisabledButtonReset: false\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tstartValueDisplay: state.startValue,\r\n\t\t\t\t\tdisabledButtonReset: true,\r\n\t\t\t\t\tdisabledButtonInc: false\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase ACTIONS_TYPE.SET_ERROR: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\terror: action.payload\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\nexport default Reducer;","import { createStore, combineReducers} from \"redux\";\r\nimport Reducer from \"./reducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n\treducer: Reducer\r\n})\r\n\r\nexport type RootStoreType = ReturnType<typeof reducers>\r\n\r\nexport let store = createStore(reducers)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./Redux/redux_store\";\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App/>\n\t</Provider>\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}